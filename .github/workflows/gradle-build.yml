name: docker login and build gradle project

on:
  workflow_call:
    inputs:
      project_dir:
        description: "project dir with gradle file. current directory being default"
        required: false
        default: "."
        type: string
      docker_registry:
        description: "The docker registry to use for docker login"
        required: false
        default: "ghcr.io"
        type: string
      docker_user:
        description: "The docker user to login"
        required: true
        type: string
      jdk_version:
        description: "The jdk version to use run java applications"
        required: false
        default: "17"
        type: string
      run_sonar:
        description: "Run sonar analysis"
        type: boolean
        required: false
        default: false
    secrets:
      docker_password:
        description: "The docker password for login"
        required: true
      SONAR_TOKEN:
        description: "sonar token to use"
        required: false
      SONAR_HOST_URL:
        description: "sonar host url to use"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.docker_password }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.docker_registry }}
          username: ${{ inputs.docker_user }}
          password: ${{ secrets.docker_password }}
      - name: Set up JDK ${{ inputs.jdk_version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: "adopt"
          cache: gradle
      - name: Cache SonarQube packages
        if: ${{ inputs.run_sonar}}
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Make gradlew executable
        run:  |
          cd "${{ inputs.project_dir }}"
          chmod +x ./gradlew
      # without sonar just run the build
      - name: Build with Gradle
        if: ${{ !inputs.run_sonar }}
        run: |
          cd "${{ inputs.project_dir }}"
          ./gradlew build --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.docker_password }}
      # and with sonar do the code analysis
      - name: Build and sonar analyze with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.docker_password }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        if: ${{ inputs.run_sonar}}
        run: |
          cd "${{ inputs.project_dir }}"
          ./gradlew build sonar --stacktrace
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
